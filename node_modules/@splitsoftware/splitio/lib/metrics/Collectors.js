"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.ClientCollector = exports.MySegmentsCollector = exports.SplitChangesCollector = exports.SegmentChangesCollector = void 0;

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var ProducerMetricsCollector = /*#__PURE__*/function () {
  function ProducerMetricsCollector(storage) {
    this.storage = storage;
    this.latency = this.latency.bind(this);
    this.count = this.count.bind(this);
    this.countException = this.countException.bind(this);
  }

  var _proto = ProducerMetricsCollector.prototype;

  _proto.latency = function latency(ms) {
    this.storage.metrics.track(this.metricType + ".time", ms);
  };

  _proto.count = function count(status) {
    this.storage.count.track(this.metricType + ".status." + status);
  };

  _proto.countException = function countException() {
    this.storage.count.track(this.metricType + ".exception");
  };

  return ProducerMetricsCollector;
}();

var SegmentChangesCollector = /*#__PURE__*/function (_ProducerMetricsColle) {
  (0, _inheritsLoose2.default)(SegmentChangesCollector, _ProducerMetricsColle);

  function SegmentChangesCollector(storage) {
    var _this;

    _this = _ProducerMetricsColle.call(this, storage) || this;
    _this.metricType = 'segmentChangeFetcher';
    return _this;
  }

  return SegmentChangesCollector;
}(ProducerMetricsCollector);

exports.SegmentChangesCollector = SegmentChangesCollector;

var SplitChangesCollector = /*#__PURE__*/function (_ProducerMetricsColle2) {
  (0, _inheritsLoose2.default)(SplitChangesCollector, _ProducerMetricsColle2);

  function SplitChangesCollector(storage) {
    var _this2;

    _this2 = _ProducerMetricsColle2.call(this, storage) || this;
    _this2.metricType = 'splitChangeFetcher';
    return _this2;
  }

  return SplitChangesCollector;
}(ProducerMetricsCollector);

exports.SplitChangesCollector = SplitChangesCollector;

var MySegmentsCollector = /*#__PURE__*/function (_ProducerMetricsColle3) {
  (0, _inheritsLoose2.default)(MySegmentsCollector, _ProducerMetricsColle3);

  function MySegmentsCollector(storage) {
    var _this3;

    _this3 = _ProducerMetricsColle3.call(this, storage) || this;
    _this3.metricType = 'mySegmentsFetcher';
    return _this3;
  }

  return MySegmentsCollector;
}(ProducerMetricsCollector);

exports.MySegmentsCollector = MySegmentsCollector;

var ClientCollector = /*#__PURE__*/function () {
  function ClientCollector(storage) {
    this.storage = storage;
    this.ready = this.ready.bind(this);
    this.getTreatment = this.getTreatment.bind(this);
    this.getTreatments = this.getTreatments.bind(this);
    this.getTreatmentWithConfig = this.getTreatmentWithConfig.bind(this);
    this.getTreatmentsWithConfig = this.getTreatmentsWithConfig.bind(this);
  }

  var _proto2 = ClientCollector.prototype;

  _proto2.ready = function ready(ms) {
    this.storage.metrics.track('sdk.ready', ms);
  };

  _proto2.getTreatment = function getTreatment(ms) {
    this.storage.metrics.track('sdk.getTreatment', ms);
  };

  _proto2.getTreatments = function getTreatments(ms) {
    this.storage.metrics.track('sdk.getTreatments', ms);
  };

  _proto2.getTreatmentWithConfig = function getTreatmentWithConfig(ms) {
    this.storage.metrics.track('sdk.getTreatmentWithConfig', ms);
  };

  _proto2.getTreatmentsWithConfig = function getTreatmentsWithConfig(ms) {
    this.storage.metrics.track('sdk.getTreatmentsWithConfig', ms);
  };

  return ClientCollector;
}();

exports.ClientCollector = ClientCollector;