"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.validateSplits = validateSplits;

var _lang = require("../lang");

var _logger = _interopRequireDefault(require("../logger"));

var _split = require("./split");

var log = (0, _logger.default)('');

function validateSplits(maybeSplits, method, listName, item) {
  if (listName === void 0) {
    listName = 'split_names';
  }

  if (item === void 0) {
    item = 'split name';
  }

  if (Array.isArray(maybeSplits) && maybeSplits.length > 0) {
    var validatedArray = []; // Remove invalid values

    maybeSplits.forEach(function (maybeSplit) {
      var splitName = (0, _split.validateSplit)(maybeSplit, method, item);
      if (splitName) validatedArray.push(splitName);
    }); // Strip off duplicated values if we have valid split names then return

    if (validatedArray.length) return (0, _lang.uniq)(validatedArray);
  }

  log.error(method + ": " + listName + " must be a non-empty array.");
  return false;
}