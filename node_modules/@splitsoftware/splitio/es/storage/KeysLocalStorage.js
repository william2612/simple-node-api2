import _inheritsLoose from "@babel/runtime/helpers/esm/inheritsLoose";
import { startsWith } from '../utils/lang';
import KeyBuilder from './Keys';
import { matching } from '../utils/key/factory';

var KeyBuilderForLocalStorage = /*#__PURE__*/function (_KeyBuilder) {
  _inheritsLoose(KeyBuilderForLocalStorage, _KeyBuilder);

  function KeyBuilderForLocalStorage(settings) {
    var _this;

    _this = _KeyBuilder.call(this, settings) || this;
    _this.regexSplitCacheKey = new RegExp("^" + _this.settings.storage.prefix + "\\.(splits?|trafficType)\\.");
    return _this;
  }

  var _proto = KeyBuilderForLocalStorage.prototype;

  _proto.buildSegmentNameKey = function buildSegmentNameKey(segmentName) {
    return matching(this.settings.core.key) + "." + this.settings.storage.prefix + ".segment." + segmentName;
  };

  _proto.extractSegmentName = function extractSegmentName(builtSegmentKeyName) {
    var prefix = matching(this.settings.core.key) + "." + this.settings.storage.prefix + ".segment.";
    if (startsWith(builtSegmentKeyName, prefix)) return builtSegmentKeyName.substr(prefix.length);
  };

  _proto.buildSplitsWithSegmentCountKey = function buildSplitsWithSegmentCountKey() {
    return this.settings.storage.prefix + ".splits.usingSegments";
  };

  _proto.buildLastUpdatedKey = function buildLastUpdatedKey() {
    return this.settings.storage.prefix + ".splits.lastUpdated";
  };

  _proto.isSplitCacheKey = function isSplitCacheKey(key) {
    return this.regexSplitCacheKey.test(key);
  };

  _proto.buildSplitsFilterQueryKey = function buildSplitsFilterQueryKey() {
    return this.settings.storage.prefix + ".splits.filterQuery";
  };

  return KeyBuilderForLocalStorage;
}(KeyBuilder);

export default KeyBuilderForLocalStorage;